<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fochoac</groupId>
    <artifactId>devops-demo-ws</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>devops-demo-ws</name>
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <env>prod</env>
        <!--KUMULUZEE Properties-->
        <kumuluzee.version>3.12.1</kumuluzee.version>
        <kumuluzee-openapi-mp.version>1.4.0</kumuluzee-openapi-mp.version>
        <kumuluzee-config-mp.version>1.4.1</kumuluzee-config-mp.version>
        <kumuluzee-logs.version>1.4.2</kumuluzee-logs.version>
        <junit.version>4.13.1</junit.version>
        <arquillian.version>1.6.4</arquillian.version>

        <!--Docker Properties       -->
        <docker.image.name>gcr.io/devops-default/${project.artifactId}-${env}</docker.image.name>
        <dockerfile.location>${project.basedir}/Dockerfile</dockerfile.location>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.kumuluz.ee</groupId>
                <artifactId>kumuluzee-bom</artifactId>
                <version>${kumuluzee.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>


    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.kumuluz.ee</groupId>
            <artifactId>kumuluzee-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kumuluz.ee</groupId>
            <artifactId>kumuluzee-servlet-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kumuluz.ee</groupId>
            <artifactId>kumuluzee-jax-rs-jersey</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kumuluz.ee</groupId>
            <artifactId>kumuluzee-cdi-weld</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kumuluz.ee.openapi</groupId>
            <artifactId>kumuluzee-openapi-mp</artifactId>
            <version>${kumuluzee-openapi-mp.version}</version>
        </dependency>
        <dependency>
            <groupId>com.kumuluz.ee.openapi</groupId>
            <artifactId>kumuluzee-openapi-mp-ui</artifactId>
            <version>${kumuluzee-openapi-mp.version}</version>
        </dependency>
        <dependency>
            <groupId>com.kumuluz.ee.config</groupId>
            <artifactId>kumuluzee-config-mp</artifactId>
            <version>${kumuluzee-config-mp.version}</version>
        </dependency>
        <dependency>
            <artifactId>kumuluzee-logs-log4j2</artifactId>
            <groupId>com.kumuluz.ee.logs</groupId>
            <version>${kumuluzee-logs.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.0</version>
        </dependency>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.15.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>1.6.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>1.6.4</version>
            <scope>test</scope>
        </dependency>


    </dependencies>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.4.0.905</version>
                    <configuration>

                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.2</version>
                    <configuration>
                        <excludes>
                            <exclude>ec/greeting/configuration/*</exclude>
                            <exclude>ec/greeting/producer/*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <!-- attached to Maven test phase -->
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.kumuluz.ee</groupId>
                <artifactId>kumuluzee-maven-plugin</artifactId>
                <version>${kumuluzee.version}</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    <profiles>

        <profile>
            <id>gcr</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>registry</name>
                    <value>gcr</value>
                </property>
                <file>
                    <exists>deploy</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <configuration>
                            <mode>kubernetes</mode>
                            <forcePull>true</forcePull>
                            <images>
                                <image>
                                    <name>${docker.image.name}</name>

                                    <build>
                                        <tags>
                                            <tag>${project.version}</tag>
                                        </tags>
                                        <dockerFile>${dockerfile.location}</dockerFile>
                                        <contextDir>${project.basedir}</contextDir>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
